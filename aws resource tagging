aws ec2 describe-instances --filters Name=instance-state-name,Values=running Name=tag:Name,Values="*my-string*" --query 'Reservations[].Instances[].InstanceId' --output text | while read id; do aws ec2 create-tags --resources $id --tags Key=MyKey,Value=MyValue ; done


aws efs describe-file-systems --query FileSystems[?Name == \`dev-spring\`].FileSystemId

aws efs describe-file-systems --query 'FileSystems[?contains(Tags[?Key==`Name`].Value, `my-string`) == `true`].FileSystemId' --output text


to describe snapshot list. May fail if name tag doesn't present
aws ec2 describe-snapshots --query 'Snapshots[*].[SnapshotId, Description, Size, TaggedResourceType, Tags[?Key==`Name`].Value|[0]]' --output table

It will display all the tags available for every snapshot, thus avoiding failure due to missing 'Name' attribute.
aws ec2 describe-snapshots --query 'Snapshots[*].[SnapshotId, Description, Size, TaggedResourceType, Tags[].{Name: Value}]' --output table

Owned by me snapshots
aws ec2 describe-snapshots --owner-ids self --query 'Snapshots[*].[SnapshotId, Description, Size, TaggedResourceType, Tags[?Key==`Name`].Value|[0]]' --output table

Private snapshots
aws ec2 describe-snapshots --filters Name=status,Values=available Name=owner-alias,Values=amazon OwnerIds='["self"]' --query 'Snapshots[*].[SnapshotId, StartTime, VolumeId, State, OwnerAlias, Tags[?Key==`Name`].Value|[0], Description, Size ]' --output table

